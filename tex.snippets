global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal

snippet template "Basic template" b

\documentclass[12pt]{article}
\usepackage{mdframed}
% Required to support mathematical unicode
\usepackage[warnunknown, fasterrors, mathletters]{ucs}
\usepackage[utf8x]{inputenc}

% Use a larger font size
\usepackage[fontsize=14pt]{scrextend}

% Symbol and utility packages
\usepackage{cancel}
\usepackage[mathscr]{euscript}
\usepackage[nointegrals]{wasysym}

%State drawing yeehaw
\usepackage{tikz}
\usetikzlibrary{automata, positioning, arrows}
\tikzset{
->,  % makes the edges directed
>=stealth', % makes the arrow heads bold
node distance=4cm, % specifies the minimum distance between two nodes. Change if necessary.
every state/.style={thick,nord4, fill=nord2}, % sets the properties for each ’state’ node
every edge/.append style={thick,nord4, font=\footnotesize},
initial text=$ $, % sets the text that appears on the start arrow
auto,
}


\DeclareMathSizes{14}{16}{12}{12}

\usepackage[T1]{fontenc}
\usepackage{stix}

%\usepackage[urw-garamond]{mathdesign}
%\usepackage[T1]{fontenc}

%\usepackage{fourier}
%\usepackage[T1]{fontenc}

%Stella's fonts
%\usepackage{newtxtext,newtxmath}

%\usepackage{gfsartemisia-euler}
%\usepackage[T1]{fontenc}

%\usepackage{palatino}  %% Option 'sfdefault' only if the base font of the document is to be sans serif

\usepackage{amsmath, amssymb}
\usepackage{amsthm}
\usepackage{physics}
\usepackage{amsfonts}
\usepackage{mathtools}  % Extension to amsmath


%colortime
\usepackage{xcolor}
\definecolor{mniip}{HTML}{9FEE00}
\definecolor{discord}{HTML}{36393F}
\definecolor{aria}{HTML}{FF66CC}
\definecolor{nord10}{HTML}{5E81AC}
\definecolor{nord0}{HTML}{2E3440}
\definecolor{nord1}{HTML}{3B4252}
\definecolor{nord2}{HTML}{434C5E}
\definecolor{nord4}{HTML}{D8DEE9}
\definecolor{nord5}{HTML}{E5E9F0}
\definecolor{nord6}{HTML}{ECEFF4}
\definecolor{nord9}{HTML}{81A1C1}
\usepackage{tcolorbox}
\tcbuselibrary{theorems}
\theoremstyle{plain}
\newtheorem{theore}{Theorem}[subsection]

\theoremstyle{remark}
\newtheorem{remark}[theore]{Remark}

\newtcbtheorem[number within=section]{theorem}{Theorem}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{lemma}{Lemma}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{corollary}{Corollary}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{proposition}{Proposition}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{definition}{Definition}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{example}{Example}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}

\newtcbtheorem[number within=section]{conjecture}{Conjecture}%
{colback=nord0,colframe=nord1,coltext=nord4,fonttitle=\bfseries}{th}


\usepackage[margin=0.25in]{geometry}

\usepackage{csquotes}

\newcommand{\R}{\mathbb{R}}
\newcommand{\Q}{\mathbb{Q}}

\usepackage{fancyhdr}

\usepackage{pagecolor}

\title{$1}
\author{Yohan Wittgenstein}

\pagecolor{nord0}
\color{nord4}

\begin{document}
$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1} 
	$0
\\end{$1}
endsnippet

snippet theorem "theorem" b
\begin{${1:Theorem}} {$2}{${3:Label}}
$0
\end{$1} 
endsnippet 

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet ' "prime dash" iA
\prime
endsnippet
 

context "math()" 
snippet underbrace "underbrace" iA
\underbrace{$1}_{$2} $0
endsnippet 

context "math()" 
snippet overbrace "overbrace" iA
\overbrace{$1}^{$2} $0
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

snippet state "Automata state" w
\node [state $1] ($2) {$3}; $0
endsnippet

snippet path "Automata path" w
($1) edge[${2:above}] node{$3} ($4)
endsnippet

snippet res "residue" w
\underset{${1:z=z_j}}{\Res} ${2:f(z)} $0
endsnippet

snippet residue "Residue 2.00" w
\frac{1}{(${1:m-1})!} \lim_{z \to ${2:z_0}} \left\\{\frac{d^{$1}}{dz^{$1}}\Big[ (z-$2)^{${3:m}} ${4:f(z)}\Big] \right\\} $0
endsnippet

context "math()"
snippet cainfo "Cauchy's Integral formula" iA
\frac{1}{2\pi i} \oint_C \frac{${1:f(z)}}{${2:z-z_0}}dz
endsnippet

snippet graphicpack "graphics package" w
\usepackage{graphicx}
\graphicspath{ {/home/yan/Pictures/${1:Auto/Homework2/}} } $0
endsnippet

snippet picture "include picture" w
\includegraphics[width=\textwidth]{$1} $0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet deranfu "Derivatives of analytic functions" bA
f^{(${1:n})}(${2:z_0})=\frac{$1!}{2i\pi}\oint\limits_{C}\frac{${3:f(z)}}{(z-$2)^{$1+1}} \: dz $0
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet vmat "vmat" iA
\begin{vmatrix}
$1 
\end{vmatrix} 
$0
endsnippet


snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet line "line" w
\hrulefill
endsnippet

snippet sect "section" w
\section{$0}
endsnippet

snippet ss "subsection" w
\subsection{$0}
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\langle ${1:${VISUAL}} \rangle $0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

snippet carieq "Cauchy-Riemann Equation" iA
\begin{align*}
\pdv{u}{x} =\pdv{v}{y},  \quad   \pdv{u}{y}=-\pdv{v}{x}
\end{align*}
endsnippet

snippet stretch "array stretch" b
\renewcommand\arraystretch{2}
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
{^2}
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

snippet tikz "tikz" b
\begin{figure}[ht] % ’ht’ tells LaTeX to place the figure ’here’ or at the top of the page
\centering % centers the figure
\begin{tikzpicture}% tikz code goes here
$0
\end{tikzpicture}
\end{figure}
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nbl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} $3 \: d${4:x} $0
endsnippet

priority 300
context math()
snippet cint "complex integral" wA
\o$1int\limits_{${2:C}} ${3:f(z)} \: d${4:z} $0
endsnippet


priority 300
context "math()"
snippet gint "complexintegral" wA
\oint\limits_{\Gamma}$1d\gamma $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

context"math()"
snippet || "mid" iA
 \mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\O
endsnippet

snippet LL "fancyL" iA
\mathcal{L}
endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\Z
endsnippet

snippet <! "normal" iA
\triangleleft 
endsnippet

snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet hrm "harmonic" w
\frac{\partial^{2}u} {\partial^2x} + \frac{\partial^2u } {\partial^2 y}= 0,\quad \frac{\partial^{2}v} {\partial^2x} + \frac{\partial^2v } {\partial^2 y}=0.
endsnippet

snippet lplc "Laplace Equation" w
\frac{\partial^{2}z} {\partial^2x} + \frac{\partial^2z } {\partial^2 y}= 0
endsnippet

snippet derv2 "Second Order Derivative" wA
\frac{\partial^{2}$1} {\partial^2$0}  
endsnippet

snippet eqt "equations" w
\begin{equation}
$0
\end{equation}
endsnippet  

snippet euler "euler" w
e^{i\theta}
endsnippet

snippet fun "function" w
f:$1 \R$2 \to \R$3 $0 
endsnippet


snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

snippet tht "theta" iA
\theta
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

# vim:ft=snippets
